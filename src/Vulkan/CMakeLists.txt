cmake_minimum_required (VERSION 3.8)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(OpenMP)
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

project (VulkanGPUInstancing LANGUAGES CXX)

file(GLOB_RECURSE GPU_INSTANCING_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/*.*)
add_executable (VulkanGPUInstancing ${GPU_INSTANCING_SOURCES})

target_include_directories(VulkanGPUInstancing PUBLIC
	${GLM_INCLUDE_DIRS}
	${GLFW_INCLUDE_DIRS}
	${VULKAN_INCLUDE_DIRS}
	${IMGUI_INCLUDE_DIRS}
	${SPDLOG_INCLUDE_DIRS}
	${STB_IMAGE_INCLUDE_DIRS}
	${SPIRV_CROSS_INCLUDE_DIRS}
	${TRACY_INCLUDE_DIRS}
)

target_link_libraries(VulkanGPUInstancing PUBLIC
	${GLM_LIBRARIES}
	${GLFW_LIBRARIES}
	${VULKAN_LIBRARIES}
	${IMGUI_LIBRARIES}
	${SPDLOG_LIBRARIES}
	${STB_IMAGE_LIBRARIES}
	${SPIRV_CROSS_LIBRARIES}
	${TRACY_LIBRARIES}
)

target_compile_definitions(VulkanGPUInstancing PRIVATE IDE_ASSET_FOLDER="${CMAKE_CURRENT_SOURCE_DIR}/assets")

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${GPU_INSTANCING_SOURCES})